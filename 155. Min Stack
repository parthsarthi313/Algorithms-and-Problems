155. Min Stack

class MinStack {
public:
    vector<pair<int,long long>> v;
    long long minEle = 1e11;
    MinStack() {
        
    }
    
    void push(int val) {
        if(val < minEle){
            v.push_back({val,val});
            minEle = val;
        }
        else v.push_back({val,minEle});
    }
    
    void pop() {
        if(v.size() == 0) return;
        v.pop_back();
        int n = v.size();
        if(n == 0) minEle = 1e11;
        else{
            minEle = v[n-1].second;
        }
    }
    
    int top() {
        if(v.size() == 0) return -1;
        int n = v.size();
        return v[n-1].first;
    }
    
    int getMin() {
        return minEle;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */